name: Publish NuGet

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
    #- name: Set VERSION variable from tag
      #run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
    - name: Pack
      #run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      run: dotnet pack --configuration Release --no-build  EVLib/testactions.csproj --output .
    - name: Source  
      run: dotnet nuget add source --username plus1xp --password ${{ secrets.GITHUB_TOKEN }} 
            --store-password-in-clear-text --name github "https://nuget.pkg.github.com/plus1xp/index.json"
    - name: Push
      run: dotnet nuget push *.nupkg --skip-duplicate --api-key ${{ github.token }} --source "github"
    - name: Zip
      run: zip -r release.zip . -x "EVLib/obj/*" "EVLib.UnitTests/bin/*" "EVLib.UnitTests/obj/*"
            ".git/*" ".github/*" ".idea/*" ".vscode/*" "*.DS_Store" "*.nupkg"
    - name: Release
      run: echo "Release"

    #- name: Extract version from branch name (for release branches)
     # if: startsWith(github.event.pull_request.head.ref, 'release/')
      #run: |
       # BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
        #VERSION=${BRANCH_NAME#release/}
        #echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
        
   # - name: Extract version from branch name (for hotfix branches)
    #  if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
     # run: |
      #  BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
       # VERSION=${BRANCH_NAME#hotfix/}
        #echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
        
   # - name: Create Release
    #  uses: plus1xp/testactions@1.0.0
     # env:
      #  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #with:
       # target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
        #tag_name: ${{ env.RELEASE_VERSION }}
        #name: ${{ env.RELEASE_VERSION }}
        #draft: false
        #prerelease: false

    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: github.GITHUB_REF
        # The name of the release. For example, `Release v1.0.1`
        release_name: TEST_RELEASE_1
        draft: false
        prerelease: false
